(function(){"use strict";var m=angular.module("session",["ngDialog","angular-loading-bar"]);var loaded=false;var rootScopeArray=[];var serviceInstance=null;m.config(["ngDialogProvider",function(ngDialogProvider){ngDialogProvider.setDefaults({className:"ngdialog-theme-plain"})}]);m.provider("$session",function(){var user=null,site=null,providers=null,request=null,user_data=null;this.load=function(data){loaded=true;angular.forEach(data,function(v,k){if(k=="user"){user=v}else if(k=="site"){site=v}else if(k=="providers"){providers=v}else if(k=="request"){request=v}})};this.$get=["$q","$http","$timeout","ngDialog","$window","$rootScope",function($q,$http,$timeout,$dialog,$window,$rootScope){rootScopeArray.push($rootScope);if(serviceInstance){return serviceInstance}serviceInstance={};var host="//"+top.location.host;var loginPopupURL=host+"/_auth/login_popup";var signupPopupURL=host+"/_auth/signup_popup";var resetPwPopupURL=host+"/_auth/reset_password_popup";var forgotPwPopupURL=host+"/_auth/forgot_password_popup";var sessionLoadURL=host+"/_auth/get_session_data";var userDataURL=host+"/_auth/user_data";var hybridauthURL=host+"/_auth/hybridauth?provider=";var loginURL=host+"/_auth/login";var logoutURL=host+"/_auth/logout";var registerURL=host+"/_auth/signup";var resetPasswordURL=host+"/_auth/reset-password";var forgotPasswordURL=host+"/_auth/forgot-password";var triggerEventURL=host+"/_auth/trigger_user_event";var popupDefaults={className:"ngdialog-theme-plain"};serviceInstance.login=function(){return serviceInstance.loadSession().then(showLoginPopup)};serviceInstance.logout=function(redirectTo){$http.get(logoutURL).then(function(){serviceInstance.setSessionData({user:null});if(angular.isString(redirectTo)){top.location.href=redirectTo}},function(){top.location.href=logoutURL})};serviceInstance.signup=function(){return serviceInstance.loadSession().then(showSignupPopup)};serviceInstance.forgotPassword=function(){return serviceInstance.loadSession().then(showForgotPasswordPopup)};serviceInstance.resetPassword=function(){return serviceInstance.loadSession().then(showResetPasswordPopup)};serviceInstance.socialLogin=function(provider){var url=hybridauthURL+provider;window.open(url,"hybridauth_social_sing_on","location=0,status=0,scrollbars=0,width=640,height=480")};var showLoginPopup=function(){return $dialog.open(angular.extend(popupDefaults,{template:loginPopupURL,closeByDocument:false,data:{url:loginURL,updateSession:true},controller:["$scope",popupController]}))};var showSignupPopup=function(){return $dialog.open(angular.extend(popupDefaults,{template:signupPopupURL,closeByDocument:false,data:{url:registerURL,updateSession:true},controller:["$scope",popupController]}))};var showForgotPasswordPopup=function(){return $dialog.open(angular.extend(popupDefaults,{template:forgotPwPopupURL,closeByDocument:false,data:{url:forgotPasswordURL},controller:["$scope",popupController]}))};var showResetPasswordPopup=function(){return $dialog.open(angular.extend(popupDefaults,{template:resetPwPopupURL,closeByDocument:false,data:{url:resetPasswordURL},controller:["$scope",popupController]}))};serviceInstance.loadSession=function(){var deferred=$q.defer();if(!loaded){loaded=true;$http.get(sessionLoadURL).then(function(result){serviceInstance.setSessionData(result.data);deferred.resolve()})}else{$timeout(deferred.resolve)}return deferred.promise};serviceInstance.setSessionData=function(data){var allowed=["user","site","request","providers"];angular.forEach(data,function(v,k){if(allowed.indexOf(k)!==-1){serviceInstance[k]=v;for(var i=0;i<rootScopeArray.length;i++){rootScopeArray[i].$broadcast("session_"+k+"_update",v)}}});$timeout($dialog.closeAll)};serviceInstance.setLoginPopupURL=function(url){loginPopupURL=url};serviceInstance.getLoginPopupURL=function(){return loginPopupURL};serviceInstance.setSignupPopupURL=function(url){signupPopupURL=url};serviceInstance.getSignupPopupURL=function(){return signupPopupURL};serviceInstance.setPopupDefaults=function(thePopupDefaults){popupDefaults=thePopupDefaults};serviceInstance.triggerEvent=function(eventName,eventData){return $http.post(triggerEventURL,{eventName:eventName,eventData:eventData})};serviceInstance.showMemberLinks=function(){var show=serviceInstance.getUserID();var clsShow=show>0?".visible-members":".visible-non-members";var clsHide=!(show>0)?".visible-members":".visible-non-members";angular.element(document).find(clsHide).hide();angular.element(document).find(clsShow).show()};serviceInstance.getUserID=function(){return angular.isObject(serviceInstance["user"])&&serviceInstance["user"]["user_id"]>0?serviceInstance["user"]["user_id"]:false};serviceInstance.getUserData=function(key){var deferred=$q.defer();if(user_data&&(!key||typeof user_data[key]!=="undefined")){deferred.resolve(key?user_data[key]:user_data)}else{$http.get(userDataURL).then(function(obj){user_data=obj.data;deferred.resolve(key?user_data[key]:user_data)})}return deferred.promise};serviceInstance.setUserData=function(data){var promise=$http.post(userDataURL,{data:data});promise.then(function(obj){user_data=obj.data});return promise};serviceInstance.cookie=function(name,value,days){if(typeof value==="undefined"){var nameEQ=name+"=";var ca=document.cookie.split(";");for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==" ")c=c.substring(1,c.length);if(c.indexOf(nameEQ)==0)return c.substring(nameEQ.length,c.length)}return null}else{var expires="";if(days>0){var date=new Date;date.setTime(date.getTime()+days*24*60*60*1e3);expires="; expires="+date.toGMTString()}else if(days<0){expires="; expires=Thu, 01 Jan 1970 00:00:01 GMT"}document.cookie=name+"="+value+expires+"; path=/; domain=."+serviceInstance.site.domain}};var popupController=function($scope){var data=$scope.ngDialogData;$scope.providers=serviceInstance.providers;$scope.socialLogin=serviceInstance.socialLogin;$scope.loading=false;$scope.project={};$scope.submit=function(){var promise=$q.defer().promise;if($scope.form.$valid){$scope.loading=true;$scope.success=$scope.error="";if(promise=$http.post(data.url,{data:$scope.project})){promise.then(function(result){if(data.updateSession){serviceInstance.setSessionData(result.data)}else if(result.data&&result.data.response){$scope.success=result.data.response}$scope.loading=false},function(error){$scope.error=error.data||"Server error. Please try later.";$scope.loading=false})}}else{$scope.error="All fields are required."}return promise};$scope.switchTemplate=function(name){$scope.closeThisDialog();return name=="signup"?showSignupPopup():name=="login"?showLoginPopup():showForgotPasswordPopup()};serviceInstance.setError=function(error){$timeout(function(){$scope.error=error})}};$window.sessionManager=serviceInstance;$timeout(serviceInstance.loadSession);$rootScope.$on("session_user_update",serviceInstance.showMemberLinks);serviceInstance.setSessionData({user:user,site:site,request:request,providers:providers});return serviceInstance}]});return m})();